document.addEventListener('DOMContentLoaded',function(){let
enemy=document.querySelector('.enemy'),hitPointsBar=document.querySelector('.hit-points'),hitPointsValue=document.querySelector('.hit-points-value'),hitPointsDamageClick=document.querySelector('.damage-click'),hitPoints=0,inventory=document.querySelector('.inventory'),inventoryChild=document.querySelector('.inventory__child'),coins=document.querySelector('.coins__value'),coinsClick=document.querySelector('.coins__plus'),coinsKill=document.querySelector('.coins-kill'),coinTimer=5000,exp=document.querySelector('.experience__value'),expRemain=document.querySelector('.experience__remain'),needfulLvl=document.querySelectorAll('.needful-lvl'),lvl=document.querySelector('.lvl__value'),lvlValue=1,lvlUp=30,expKill=0,minDam=+(document.querySelector('.inventory__child').getAttribute('data-damage')),maxDam,currentDam=document.querySelector('.damage__value'),enemySkinNow=1,enemySkin=document.querySelectorAll('.enemy-skin'),enemyName=document.querySelector('.enemy__name'),names=['Варвар','Вор','Призрак','Колдун','Саурон'],minHp=150,maxHp=250,minCoin=11,maxCoin=17,killCoin=30,minTimeCoin=2,maxTimeCoin=5,shop=document.querySelector('.shop'),shopOpen=document.querySelector('.shop__link'),shopClose=document.querySelector('.shop__close'),productsMenu=document.querySelector('.shop-menu'),productsTabs=document.querySelector('.shop-menu-tabs-row'),productsTabContent=document.querySelectorAll('.shop-menu-tab'),productsTabBtns=document.querySelectorAll('.shop-menu-tab__btn'),products=document.querySelectorAll('.upgrade'),productsCost=document.querySelectorAll('.cost'),coinTimerValue=document.querySelector('.coin-timer-value');enemySkinNow=setRandom(1,5);for(let i=0;i<enemySkin.length;i++){enemySkin[i].style.display='none'}
enemySkin[enemySkinNow-1].style.display='block';names.forEach(function(item,i,names){if(i==enemySkinNow-1){enemyName.innerText=item}});hitPoints=setRandom((minHp*enemySkinNow/2),(minHp*enemySkinNow/2)+100);hitPointsBar.style.width=hitPoints+'px';hitPointsValue.innerText=hitPointsBar.offsetWidth;currentDam.innerText=minDam+' - '+(minDam+5);expRemain.innerText=lvlUp;for(let i=0;i<products.length;i++){productsCost[i].innerText=products[i].getAttribute('data-cost')}
shopOpen.addEventListener('click',function(){shop.classList.add('shop_active')});shopClose.addEventListener('click',function(){shop.classList.remove('shop_active')});window.addEventListener('click',function(e){if(e.target==document.querySelector('body')){shop.classList.remove('shop_active')}});productsTabs.addEventListener('click',function(event){if(event.target.hasAttribute('data-tab')){let tabAttr=event.target.getAttribute('data-tab');for(let i=0;i<productsTabContent.length;i++){productsTabContent[i].classList.remove('shop-menu-tab_active')
productsTabBtns[i].classList.remove('shop-menu-tab__btn_active');if(productsTabContent[i].getAttribute('data-tab')==tabAttr){productsTabContent[i].classList.add('shop-menu-tab_active');productsTabBtns[i].classList.add('shop-menu-tab__btn_active')}}}});productsMenu.addEventListener('click',function(event){if(event.target.classList=='upgrade'){let
upgradeAttr=event.target.getAttribute('data-upgrade'),weaponAttr=event.target.getAttribute('data-weapon'),weaponDamageAttr=event.target.getAttribute('data-damage'),upgradeCost=+(event.target.getAttribute('data-cost')),coinsValue=+(document.querySelector('.coins__value').innerText),status=event.target.parentNode.getAttribute('data-status'),needfulLvlValue=+(event.target.getAttribute('data-needful-lvl'));console.log(needfulLvlValue);if(coinsValue>=upgradeCost&&needfulLvlValue<=lvlValue){if(upgradeAttr=='x2'){let x2Cost=event.target.getAttribute('data-cost');x2Cost*=4;minCoin*=2;maxCoin*=2;killCoin*=2;coins.innerText=coinsValue-upgradeCost;event.target.setAttribute('data-cost',x2Cost);event.target.parentNode.querySelector('div').querySelector('.cost').innerText=x2Cost;console.log(minCoin);console.log(maxCoin)}
if(upgradeAttr=='weapon'){let newWeapon=inventoryChild.cloneNode(!0);newWeapon.innerText=weaponAttr;newWeapon.setAttribute('data-damage',weaponDamageAttr);inventory.append(newWeapon);event.target.parentNode.parentNode.removeChild(event.target.parentNode);coins.innerText=coinsValue-upgradeCost}
if(upgradeAttr=='coinTimer'){if(coinTimer>1000){let coinTimerCost=event.target.getAttribute('data-cost');coinTimerCost*=1.5;coinTimer-=1000;coinTimerValue.innerText=coinTimer-1000;coins.innerText=coinsValue-upgradeCost;event.target.setAttribute('data-cost',coinTimerCost);event.target.parentNode.querySelector('div').querySelector('.cost').innerText=coinTimerCost;if(coinTimer==1000){event.target.parentNode.parentNode.removeChild(event.target.parentNode)}
console.log(coinTimer)}}}else if(status=='closed'){showUnavailableStatus(event)}else{showNullMoney(event)}}});let coinCounter=setTimeout(function counter(){let randTimeCoin=setRandom(minTimeCoin,maxTimeCoin);coins.innerText=Number(coins.innerText)+Number(randTimeCoin);coinsClick.style.opacity=1;coinsClick.innerText='+'+randTimeCoin;setTimeout(function(){coinsClick.style.opacity=0},500);coinCounter=setTimeout(counter,coinTimer)},coinTimer);inventory.addEventListener('click',function(event){if(event.target.classList=='inventory__child'){let damage=event.target.getAttribute('data-damage');for(let i=0;i<inventory.children.length;i++){inventory.children[i].style.border='none'}
event.target.style.border='2px solid #1A2737';minDam=+damage;currentDam.innerText=minDam+' - '+(minDam+5)}});enemy.addEventListener('click',function(){let
maxDam=minDam+5,randDam=setRandom(minDam,maxDam),randHp=setRandom(minHp,maxHp),randCoin=setRandom(minCoin,maxCoin),coinsValue=+(coins.innerText),expValue=+(exp.innerText),expRemainValue=+(expRemain.innerText);hitPoints=hitPointsBar.offsetWidth;if((hitPoints-randDam)<=0){hitPointsBar.style.width=randHp+'px';hitPointsValue.innerText=randHp;coins.innerText=coinsValue+killCoin;hitPoints=hitPointsBar.offsetWidth;expKill=Math.floor((hitPoints/80));exp.innerText=expValue+expKill;expValue=+(exp.innerText);expRemain.innerText=lvlUp-expValue;coinsKill.style.opacity='1';coinsKill.innerText='+'+killCoin;setTimeout(function(){coinsKill.style.opacity='0'},500);enemySkinNow=setRandom(1,5);for(let i=0;i<enemySkin.length;i++){enemySkin[i].style.display='none'}
enemySkin[enemySkinNow-1].style.display='block';hitPoints=setRandom(((minHp*enemySkinNow)/2),((minHp*enemySkinNow)/2)+100);hitPointsBar.style.width=hitPoints+'px';hitPointsValue.innerText=hitPointsBar.offsetWidth;names.forEach(function(item,i,names){if(i==enemySkinNow-1){enemyName.innerText=item}});console.log('Зачисление опыта - '+expKill)}else{hitPointsValue.innerText=hitPoints-randDam;coins.innerText=coinsValue+randCoin;hitPoints=hitPoints-randDam+'px';hitPointsBar.style.width=hitPoints}
hitPointsDamageClick.innerText='-'+randDam;hitPointsDamageClick.style.opacity=1;coinsClick.style.opacity=1;coinsClick.innerText='+'+randCoin;setTimeout(function(){hitPointsDamageClick.style.opacity=0;coinsClick.style.opacity=0},500);if(expValue>=lvlUp){lvlValue++;exp.innerText=expValue-lvlUp;lvlUp=lvlUp*1.5;lvl.innerText=lvlValue;expRemain.innerText=lvlUp- +(exp.innerText);minHp+=50;maxHp+=50;for(let i=0;i<needfulLvl.length;i++){if(+(needfulLvl[i].innerText)==lvlValue){needfulLvl[i].parentNode.parentNode.removeAttribute('data-status');needfulLvl[i].parentNode.parentNode.classList.remove('unavailable-product')}}
console.log('lvl up - '+lvlUp);console.log('minHp - '+minHp+', maxHp - '+maxHp)}});function setRandom(min,max){return Math.floor(Number(min+Math.random()*(max+1-min)))}
function showUnavailableStatus(event){event.target.parentNode.classList.add('unavailable');setTimeout(function(){event.target.parentNode.classList.remove('unavailable')},1000)}
function showNullMoney(event){event.target.parentNode.classList.add('shop-null-money');setTimeout(function(){event.target.parentNode.classList.remove('shop-null-money')},1000)}})